<?xml version="1.0" encoding="UTF-8" ?>
<dt-example table-type="html-index" order="1">

<css lib="datatables searchpanes select" />
<js lib="jquery datatables searchpanes select">
<![CDATA[

$(document).ready(function() {
    var dt = $('#example').DataTable( {
        searchPanes: {
            viewTotal: true,
            columns: [0, 3, 4],
        },
        dom: 'Sfrtip',
        columnDefs:[ 
            {
                orderable: false,
                className: 'select-checkbox',
                searchPanes: {
                    show: true,
                    options:[
                        {
                            label: 'Checked',
                            value: function(rowData,rowIdx){
                                return this.row(rowIdx, {selected: true}).any();
                            },
                        },
                        {
                            label: 'Un-Checked',
                            value: function(rowData, rowIdx){
                                return this.row(rowIdx, {selected: true}).any() === false;
                            },
                        },
                    ],
                },
                targets: [0]
            },
            {
                searchPanes: {
                    options:[
                        {
                            label: 'Under 20',
                            value: function(rowData, rowIdx){
                                return rowData[4] < 20;
                            }
                        },
                        {
                            label: '20 to 30',
                            value: function(rowData, rowIdx){
                                return rowData[4] <= 30 && rowData[4] >=20;
                            }
                        },
                         {
                            label: '30 to 40',
                            value: function(rowData, rowIdx){
                                return rowData[4] <= 40 && rowData[4] >=30;
                            }
                        },
                         {
                            label: '40 to 50',
                            value: function(rowData, rowIdx){
                                return rowData[4] <= 50 && rowData[4] >=40;
                            }
                        },
                         {
                            label: '50 to 60',
                            value: function(rowData, rowIdx){
                                return rowData[4] <= 60 && rowData[4] >=50;
                            }
                        },
                         {
                            label: 'Over 60',
                            value: function(rowData, rowIdx){
                                return rowData[4] > 60;
                            }
                        },
                    ]
                },
                targets:[4],
            },
            {
                searchPanes: {
                    options:[
                        {
                            label: 'Not Edinburgh',
                            value: function(rowData, rowIdx){
                                return rowData[3] !== 'Edinburgh';
                            }
                        },
                        {
                            label: 'Not London',
                            value: function(rowData, rowIdx){
                                return rowData[3] !== 'London';
                            }
                        }
                    ],
                },
                targets: [3]
            }
        ],
        select: {
			style:    'os',
			selector: 'td:first-child'
		},
		order: [[ 1, 'asc' ]]
    });

    dt.on('select.dt', () => {			
        dt.searchPanes.rebuildPane(0);
    });

    dt.on('deselect.dt', () => {
        dt.searchPanes.rebuildPane(0);
    });
});

]]>
</js>

<title lib="SearchPanes">Custom Filtering Options</title>

<info><![CDATA[

This is the searchPanes extension for DataTables. It allows results to be filtered based on the values of columns.

This example shows how to set up custom comparison options using the `-init columns.searchPanes.options` array.. There are multiple predefined conditions such as `<`, `>`, `<=`, `>=`, `==`, `!=` and `includes`.
Alternatively the user can define their own comparison function.

]]></info>

</dt-example>

