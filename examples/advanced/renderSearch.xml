<?xml version="1.0" encoding="UTF-8" ?>
<dt-example table-type="ajax" order="7">

<css lib="datatables searchpanes select" />
<js lib="jquery datatables searchpanes select">
<![CDATA[

$('#example').DataTable({
	ajax: '../resources/objects.json',
	columnDefs: [
		{
			searchPanes: {
				show: true
			},
			targets: [0, 5]
		}
	],
	columns: [
		{
			data: null,
			render: function (data, type, row) {
				// Combine the first and last names into a single table field
				return data.first_name + ' ' + data.last_name;
			}
		},
		{ data: 'position' },
		{ data: 'office' },
		{ data: 'extn' },
		{ data: 'start_date' },
		{
			data: 'salary',
			render: DataTable.render.number(',', '.', 0, '$')
		}
	],
	layout: {
		top1: {
			searchPanes: {
				columns: [0, 5]
			}
		}
	}
});

]]>
</js>

<js-vanilla>
<![CDATA[

new DataTable('#example', {
	ajax: '../resources/objects.json',
	columnDefs: [
		{
			searchPanes: {
				show: true
			},
			targets: [0, 5]
		}
	],
	columns: [
		{
			data: null,
			render: function (data, type, row) {
				// Combine the first and last names into a single table field
				return data.first_name + ' ' + data.last_name;
			}
		},
		{ data: 'position' },
		{ data: 'office' },
		{ data: 'extn' },
		{ data: 'start_date' },
		{
			data: 'salary',
			render: DataTable.render.number(',', '.', 0, '$')
		}
	],
	layout: {
		top1: {
			searchPanes: {
				columns: [0, 5]
			}
		}
	}
});

]]>
</js-vanilla>

<title lib="SearchPanes">Integration with DataTables Rendering Function</title>

<info><![CDATA[

This example demonstrates searching on rendered data, in this case the Office and Salary columns. searchPanes will use the same rendering as the associated table.

]]></info>

</dt-example>

