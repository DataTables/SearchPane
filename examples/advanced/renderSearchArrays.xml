<?xml version="1.0" encoding="UTF-8" ?>
<dt-example table-type="ajax" order="2">

<css lib="datatables searchpanes select" />
<js lib="jquery datatables searchpanes select">
<![CDATA[

$(document).ready(function() {
    let dt = $('#example').DataTable( {
        ajax: '../resources/arrayData.json',
        searchPanes:{
			columns: [ 3 ]
        },
		dom: 'Plfrtip',
        columns: [
			{ 
				data: "users.first_name"
			},
			{ 
				data: "users.last_name"
			},
			{ 
				data: "sites.name"
			},
			{ 
				data: "permission",
				render: {
					_: '[, ].name',
					sp:'[].name'
				},
				searchPanes: {
					orthogonal:'sp'
				}
			}
		],
		columnDefs: [
            {
                searchPanes:{
                    show: true
                },
                targets:[3]
            }
        ],
		initComplete: function() {
			this.api().searchPanes.rebuildPane();
		}
    });
});


]]>
</js>

<title lib="searchPanes">Interaction with rendering and arrays</title>

<info><![CDATA[

This is the searchPanes extension for DataTables. It allows results to be filtered based on the values of columns.

This example demonstrates searching on arrays which are being rendered. The threshold is set to `1` so that the rendered columns will display their data. As the data is coming from an asynchronous Ajax call, the searchPanes need to be rebuilt upon table initialisation.

]]></info>

<custom-table>
	<table id="example" class="display" cellspacing="0" width="100%">
		<thead>
			<tr>
				<th>First name</th>
				<th>Last name</th>
				<th>Location</th>
				<th>Permissions</th>
			</tr>
		</thead>

		<tfoot>
			<tr>
				<th>First name</th>
				<th>Last name</th>
				<th>Location</th>
				<th>Permissions</th>
			</tr>
		</tfoot>
	</table>
</custom-table>

</dt-example>

