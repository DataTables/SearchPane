<?xml version="1.0" encoding="UTF-8" ?>
<dt-example table-type="html" table-class="display nowrap" order="5">

<css lib="datatables searchpanes select"/>

<js lib="jquery datatables searchpanes select">
<![CDATA[

$('#example').DataTable({
	initComplete: function () {
		this.api()
			.columns()
			.every(function () {
				var column = this;
				var title = column.footer().textContent;

				// Create input element and add event listener
				$('<input type="text" placeholder="Search ' + title + '" />')
					.appendTo($(column.footer()).empty())
					.on('keyup change clear', function () {
						if (column.search() !== this.value) {
							column.search(this.value).draw();
						}
					});
			});
	},
	layout: {
		top1: {
			searchPanes: {
				viewTotal: true
			}
		}
	}
});

]]>
</js>

<js-vanilla>
<![CDATA[

new DataTable('#example', {
	initComplete: function () {
		this.api()
			.columns()
			.every(function () {
				var column = this;
				var title = column.footer().textContent;

				// Create input element and add event listener
				$('<input type="text" placeholder="Search ' + title + '" />')
					.appendTo($(column.footer()).empty())
					.on('keyup change clear', function () {
						if (column.search() !== this.value) {
							column.search(this.value).draw();
						}
					});
			});
	},
	layout: {
		top1: {
			searchPanes: {
				viewTotal: true
			}
		}
	}
});

]]>
</js-vanilla>

<title lib="SearchPanes">Column Filter Integration</title>

<info><![CDATA[

This example shows how column filtering can be used alongside SearchPanes. By enabling `-feature searchPanes.viewTotal` the count will display the number of the matching records; `cascadePanes` could also be activated to only show options present in the table.

]]></info>

</dt-example>
