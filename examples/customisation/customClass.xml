<?xml version="1.0" encoding="UTF-8" ?>
<dt-example table-type="html" table-class="display nowrap" order="6">

<css lib="datatables searchpanes select">
div.myCustomClass{
    border: 2px solid red;
}
</css>

<js lib="jquery datatables searchpanes select">
<![CDATA[

$('#example').DataTable({
	columnDefs: [
		{
			searchPanes: {
				className: 'myCustomClass'
			},
			targets: [3]
		}
	],
	layout: {
		top1: {
			searchPanes: {
				panes: [
					{
						header: 'Custom',
						options: [
							{
								label: 'Accountants from Tokyo',
								value: function (rowData, rowIdx) {
									return (
										rowData[1] === 'Accountant' &&
										rowData[2] === 'Tokyo'
									);
								}
							}
						],
						dtOpts: {
							dom: 'tp',
							paging: true,
							order: [[1, 'desc']]
						},
						className: 'myCustomClass'
					}
				]
			}
		}
	}
});

]]>
</js>

<title lib="SearchPanes">Custom Pane Class</title>

<info><![CDATA[

This example shows how to add a custom class to a specific pane by setting the `-init columns.searchPanes.className` property to be a string containing the custom classes.

This example also shows how to add a custom class to custom panes using the `-feature searchPanes.panes.className` property. 

As you can see in the CSS section below the DataTable, the border property of `myCustomClass` has been set to red. This is shown around the Age pane.

]]></info>

</dt-example>
