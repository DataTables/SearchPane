<?xml version="1.0" encoding="UTF-8" ?>
<dt-option library="SearchPanes">
	<name>columns.searchPanes.preSelect</name>
	<summary>Deprecated. Pre-selected options in a pane</summary>
	<since>SearchPanes 1.0.0</since>

	<type type="Array">
		<description>
			By setting the `-init columns.searchPanes.preSelect` option to an array of `-type string` values, the pane produced for that column will be searched and if the values of the `-init columns.searchPanes.preSelect` option are found then they will be pre-selected.
		</description>
	</type>

	<default value="undefined">
		The default value for the `-init columns.searchPanes.preSelect` parameter is `-type undefined`. When this default value is in place, no values will be preSelected in the pane.
	</default>
	<description>
		<![CDATA[
			This option is deprecated from version 2.0.0+. It was replaced by `-init searchPanes.preSelect` which allowed the order that the selections were made in to be defined. This allowed preselecting to become compatible with `-init searchPanes.cascadePanes`

			As standard, SearchPanes will not pre-select any values in any of the panes.

			If any of the elements in the array held in `-init columns.searchPanes.preSelect` are present in the pane then they will be pre-selected.

			Note: Before version 2.0.0, where this option was deprecated, `-init columns.searchPanes.preSelect` was not supported with `-init searchPanes.cascadePanes`. This was because in order to have the cascade operate as expected the selections had to be made in the correct order. It is however now possible in versions after 2.0.0 using `-init searchPanes.preSelect`
		]]>
	</description>

	<example title="Pre-select values in a pane"><![CDATA[
new DataTable('#myTable', {
	layout: {
		top1: 'searchPanes'
	},
	columnDefs: [
		{
			searchPanes: {
				preSelect: ['Edinburgh', 'London']
			},
			targets: [3]
		}
	]
});
]]></example>

<related type="option">searchPanes.preSelect</related>

</dt-option>
