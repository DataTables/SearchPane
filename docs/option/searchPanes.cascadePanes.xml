<?xml version="1.0" encoding="UTF-8" ?>
<dt-option library="SearchPanes">
	<name>searchPanes.cascadePanes</name>
	<summary>Allow panes to cascade under selection</summary>
	<since>SearchPanes 1.0.0</since>

	<type type="boolean">
		<description>
		By setting the `-init searchPanes.cascadePanes` option to true, when a selection is made the options in the other panes which have no values currently being shown in the table hidden.
	</description>
	</type>

	<default value="false">
	The default value for the `-init searchPanes.cascadePanes` parameter is `false`. When this default value is in place no action will be taken to cascade the panes.
	</default>
	<description>
		<![CDATA[
			As standard, SearchPanes will display all of the options for that column throughout its operation. When `-init searchPanes.cascadePanes` is set to `true`, the panes will remove options which are no longer present in the currently displayed DataTable. The cascade action will occur when a selection or a deselection is made in one of the panes.

			This is useful when dealing with large data sets with many different options as they are narrowed down accordingly as selections proceed.

			Note: `-init searchPanes.cascadePanes` is not supported with `-init searchPanes.preSelect`. This is because in order to have the cascade operate as expected the selections need to be made in the correct order. Currently it is not possible to indicate this with preSelect.

			Note: `-init searchPanes.cascadePanes` is not supported when `-init serverSide` _and_ `-init stateSave` are used together. While SearchPanes will still operate with this setup, the options shown in the panes will not filter down as expected. This is because SearchPanes would need to make another request for every selection that has been made prior to this, in order to get accurate data. This, for obvious reasons, is not efficient and very messy.

			Note: When using `-init columns.searchPanes.combiner` along with `-init searchPanes.cascadePanes` you must make sure that your data is appropriate for the selection that you make. `-init searchPanes.cascadePanes` was developed with the default `or` logic in mind, using `and` logic will work in the majority of cases, but may yield some unexpected results when deselecting in a _very_ small amount of cases.
		
			Note: When loading SearchPanes options over ajax, but then not using `-init serverSide` processing, neither `-init searchPanes.cascadePanes` or `-init searchPanes.viewTotal` are supported. This is due to the requirements for users to provide accurate data for the SearchPanes options, whose values change when using these two options. While it is still possible to enable these options, it is not advised and may lead to unexpected behaviour.
		]]>
	</description>

	<example title="Enable cascading panes:"><![CDATA[

$(document).ready(function() {
    $('#example').DataTable({
        searchPanes: {
            cascadePanes: true
        },
		dom: 'Plfrtip'
    });
});

]]></example>

</dt-option>
